<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>SemanticVersioning.MSBuild</id>
    <version>$version$</version>
    <authors>Lex Mitchell</authors>
    <owners>Lex Mitchell</owners>
    <title>Version injection of DLL's based on the model described by SemVer.org methods. No dependencies on PowerShell or MSBuild Community Tasks</title>
    <description>Allows version numbers (including file and informational) to be overridden from the build based on $SemanticVersion and the optional $Tag build variables. By Default it will look for AssemblyInfo but you can change this to another filename (omitting extension) with $VersionFileName if you have a custom info file. Typically you would leave local builds at version 1.0.0.0 and inject the parameters on a build server.</description>
    <language>en-US</language>
    <copyright>Copyright © 2016.</copyright>
    <projectUrl>https://github.com/Lexcess</projectUrl>
    <iconUrl>https://raw.githubusercontent.com/Lexcess/SemanticVersioning.MSBuild/master/src/MSBuild/icon.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <developmentDependency>true</developmentDependency>
    <tags>msbuild semver semantic versioning csproj assemblyinfo assemblyversion assemblyinformationalversion</tags>
    <dependencies>
      <group targetFramework="dotnet">
        <dependency id="System.Resources.ResourceManager" version="4.0.0" />
        <dependency id="System.Runtime" version="4.0.0" />
      </group>
    </dependencies>
  </metadata>
</package>