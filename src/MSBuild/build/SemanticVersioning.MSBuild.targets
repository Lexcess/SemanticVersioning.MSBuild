<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <Target Name="ApplySemanticVersion" BeforeTargets="CoreCompile" Condition="'$(SemanticVersion)' != '' And !Exists($(MSBuildThisFileDirectory)..\build\Microsoft.NET.Sdk.props)">
    <ItemGroup>
      <UnmodifedFile Include="@(Compile)" Condition="%(Filename) == '$(VersionFileName)'" />
      <Compile Remove="**/$(VersionFileName).cs" />
    </ItemGroup>
    <Copy SourceFiles="@(UnmodifedFile)" DestinationFiles="$(IntermediateOutputPath)%(Identity)">
      <Output TaskParameter="DestinationFiles" ItemName="ModifiedFile"/>
    </Copy>
    <PropertyGroup>
      <FileContents>$([System.IO.File]::ReadAllText("%(ModifiedFile.FullPath)"))</FileContents>
      <UpdatedFileContents>$([System.Text.RegularExpressions.Regex]::Replace($(FileContents),
        ".+?Assembly(|File|Informational)Version.+?\](\s+|)",
        "",
        System.Text.RegularExpressions.RegexOptions.IgnoreCase)
        )
// Semantic Versions added by build.
[assembly: AssemblyVersion("$(SemanticVersion)")]
[assembly: AssemblyFileVersion("$(SemanticVersion)")]
[assembly: AssemblyInformationalVersion("$(FullSemanticVer)")]</UpdatedFileContents>
    </PropertyGroup>
    <WriteLinesToFile File="%(ModifiedFile.FullPath)" Lines="$(UpdatedFileContents)" Overwrite="true" Encoding="Unicode"/>
    <ItemGroup>
      <Compile Include="@(ModifiedFile)" />
    </ItemGroup>
  </Target>
  <Target Name="ApplySemanticVersion" BeforeTargets="CoreCompile" Condition="'$(SemanticVersion)' != '' And Exists($(MSBuildThisFileDirectory)..\build\Microsoft.NET.Sdk.props)">
    <PropertyGroup>
      <Version>$(FullSemanticVer)</Version>
      <AssemblyVersion>$(SemanticVersion)</AssemblyVersion>
      <FileVersion>$(SemanticVersion)</FileVersion>
    </PropertyGroup>
  </Target>
</Project>